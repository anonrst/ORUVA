// SPDX-License-Identifier: MIT
pragma solidity ^0.8.22;

// ICDPEngine defines the main logic for handling CDPs (Collateralized Debt Positions)
// Similar to MakerDAO's "Vat" or core accounting system.
interface ICDPEngine {
    // Stores global collateral type data (e.g., ETH, BTC)
    struct Collateral {
        uint256 debt; // Total debt generated by this collateral type
        uint256 accRate; // Accumulated rate for stability fee calculation
        uint256 spot; // Current price (collateral value per unit)
        uint256 maxDebt; // Max allowed debt for this collateral type
        uint256 minDebt; // Minimum position debt limit
    }

    // Stores a single user's position (CDP)
    struct Position {
        uint256 collateral; // Amount of collateral locked
        uint256 debt; // Amount of debt drawn
    }

    // Adjusts collateral and debt for a CDP (core operation)
    function modifyCdp(
        bytes32 collateralType,
        address urn, // CDP holder
        address dst, // Receiver for collateral
        address src, // Source of debt
        int256 dink, // Collateral delta (+/-)
        int256 dart // Debt delta (+/-)
    ) external;

    // Initializes a new collateral type in the system
    function init(bytes32 collateralType) external;

    // slip: Directly change internal collateral balance for a type
    function modifyCollateralBalance(bytes32 collateralType, address user, int256 delta) external;

    function collaterals(bytes32 _colType) external view returns (Collateral memory);

    // move: Transfer internal INRc (stablecoin) balances between accounts
    function transferInrc(address src, address dst, uint256 amount) external;

    // Allows a specific account to modify others' CDPs (used for delegation)
    function allowAccountModification(address user) external;

    // this function is for setting collateral data based in collateral type
    function set(bytes32 _colType, bytes32 _key, uint256 _data) external;

    // Generic setter for system-wide config values
    function set(bytes32 _key, uint256 _data) external;

    // Updates the collateral’s stability fee rate (accumulated over time)
    function fold(bytes32 collateralType, address user, int256 rateDelta) external;

    // Revokes permission to modify another account’s CDP
    function denyAccountModification(address user) external;
}
